<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1LQeF9G3JV/TtySu07Yk3tO3
        Jf/TtyX/07cl/9O3Jf/StyXm07clttG2JG/PtyYfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAz7cmH9O3JK7TtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/StiW+0bYjNwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA374cB9S3JY7TtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/0rckps+v
        Hw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM+3Jh/StyTO07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3
        Jf/TtyX/07Yk3tS0JC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUtCQv07cl7tO3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/0rYl9tC0IkcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAz7cmH9K3
        JebTtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/0rYl9tS0JC8AAAAAAAAAAAAAAAAAAAAAAAAAAN++
        HAfTtyXG07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07Yk3s+vHw8AAAAAAAAAAAAA
        AAAAAAAA07clf9O3Jf/TtyX/07cl/9O3Jf/aw2//3suJ/97Lif/ey4n/3suJ/97Lif/ey4n/3suJ/97L
        if/ey4n/3suJ/97Lif/ey4n/3suJ/97Lif/ey4n/3suJ/97Lif/WvE7/07cl/9O3Jf/TtyX/07YkngAA
        AAAAAAAAAAAAANS0HhfStiX207cl/9e/Wv/v5s7/+/n0//z69//8+vf//Pr3//z69//8+vf//Pr3//z6
        9//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z69//38+n/382P/9O3
        Jf/TtyX/1LQkLwAAAAAAAAAA07glltO3Jf/fzY//+ffw//z69//8+vf//Pr3//z69//8+vf//Pr3/+nw
        5f/8+vf//Pr3//b38f/i7N//1+fV/9fn1f/z9e7//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z6
        9//8+vf/6d24/9O3Jf/TtySuAAAAAN++HAfTtyXu179a//j17f/8+vf//Pr3//z69//8+vf//Pr3//z6
        9//8+vf/jMeQ/8ziyv+827v/d8F8/2a9bv9mvW7/Zr1u/2a9bv+ZzJv/7PLo//z69//8+vf//Pr3//z6
        9//8+vf//Pr3//z69//8+vf/3ciA/9O3Jf/UtB4X0LQiR9O3Jf/t5Mn//Pr3//z69//8+vf//Pr3//z6
        9//8+vf//Pr3//z69/9mvW7/Zr1u/2a9bv93wXz/vNu7/8Tewv/E3sL/k8qV/2a9bv9vvnb/1+fV//z6
        9//8+vf//Pr3//z69//8+vf//Pr3//z69//w6NL/07cl/9G3JV/UtyWO07cl//fz6f/8+vf//Pr3//z6
        9//8+vf//Pr3//z69//8+vf/7PLo/2a9bv9mvW7/Zr1u/8ziyv/8+vf//Pr3//z69//8+vf/1OXR/2++
        dv9vvnb/8/Xu//z69//8+vf//Pr3//z69//8+vf//Pr3//fz6f/TtyX/07ckrtO3JbbXv1r//Pr3//z6
        9//8+vf//Pr3//z69//8+vf//Pr3//z69//f6tv/Zr1u/57PoP+ez6D/xN7C//b38f/8+vf//Pr3//z6
        9//8+vf/xN7C/2a9bv+p06n//Pr3//z69//8+vf//Pr3//z69//8+vf/+ffw/9O3Jf/TtiTW0rckzta8
        Tv/8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z6
        9//8+vf//Pr3//z69//5+PT/fsOD/2a9bv/5+PT//Pr3//z69//8+vf//Pr3//z69//x6tb/07cl/9O3
        Je7StyXm07cl//bx5v/8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf/3+rb/8Tewv/8+vf//Pr3//z6
        9//8+vf//Pr3//z69//8+vf//Pr3//z69/+ez6D/Zr1u/+nw5f/8+vf//Pr3//z69//8+vf//Pr3/+bY
        rf/TtyX/07cl/9O2JN7TtyX/6+DA//z69//8+vf//Pr3//z69//8+vf//Pr3//z69/+ZzJv/Zr1u//D0
        6//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3/8ziyv/E3sL/9vfx//z69//8+vf//Pr3//z6
        9//38+n/1Lk8/9O3Jf/TtyX/07clxtO3Jf/UuTz/9vHm//z69//8+vf//Pr3//z69//8+vf//Pr3/7PX
        sv9mvW7/5u7i//z69//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z6
        9//8+vf/9/Pp/9nBZv/TtyX/07cl/9K3JebTtySu07cl/9O3Jf/aw2//9/Pp//z69//8+vf//Pr3//z6
        9//8+vf/1OXR/2a9bv+TypX//Pr3//z69//8+vf//Pr3//z69//b6dj/xN7C/67Vrv+ez6D/s9ey//z6
        9//8+vf//Pr3/+zixf/UuTz/07cl/9O3Jf/TtyX/0rckztO3JX/TtyX/07cl/9O3Jf/UuTz/59qy//v5
        9P/8+vf//Pr3//z69//8+vf/mcyb/2a9bv+42bb/+fj0//z69//8+vf//Pr3/+nw5f93wXz/Zr1u/2a9
        bv+827v//Pr3//z69//8+vf/4tGc/9O3Jf/TtyX/07cl/9O3Jf/TtiSe0rglJ9O3Jf/TtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/UuTz/+ffw//z69//s8uj/d8F8/2a9bv+FxYn/xN7C/+Ls3//f6tv/qdOp/2a9
        bv9mvW7/Zr1u/9Djzv/8+vf//Pr3//z69//dyID/07cl/9O3Jf/TtyX/07cl/9C0IkcAAAAA07Yk3tO3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/t5Mn//Pr3//z69//z9e7/o9Gl/2a9bv9mvW7/Zr1u/2a9
        bv9mvW7/k8qV/9Djzv93wXz/3+rb//z69//8+vf/+/n0/9a8Tv/TtyX/07cl/9O3Jf/StiX2374cBwAA
        AADRtiRv07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/97Lif/8+vf//Pr3//z69//8+vf/8PTr/9Tl
        0f/E3sL/yODG/+bu4v/8+vf//Pr3/+nw5f/w9Ov//Pr3//z69//m2K3/07cl/9O3Jf/TtyX/07cl/9S3
        JY4AAAAAAAAAAN++HAfStyXm07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/+vgwP/8+vf//Pr3//z6
        9//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf/9e/i/9S5PP/TtyX/07cl/9O3
        Jf/StiX21LQeFwAAAAAAAAAAAAAAANO2JVfTtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl//Do
        0v/8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//fz6f/ZwWb/07cl/9O3
        Jf/TtyX/07cl/9G2JG8AAAAAAAAAAAAAAAAAAAAAAAAAANO2JJ7TtyX/07cl/9O3Jf/TtyX/07cl/9O3
        Jf/TtyX/1Lk8/+fasv/59/D//Pr3//z69//8+vf//Pr3//z69//8+vf//Pr3//z69//x6tb/179a/9O3
        Jf/TtyX/07cl/9O3Jf/StiW+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA374cB9O3JcbTtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9a8Tv/r4MD/8uza//z69//8+vf//Pr3//v59P/w6NL/4c+W/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07Yk3s+vHw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAz68fD9O3
        JcbTtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9rDb//bxnn/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O2JNbPtyYfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA374cB9O4JZbTtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtySuz68fDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANK1Jk/TtiTe07cl/9O3Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/StyXm0rUkZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRtiRv07Yk1tO3Jf/TtyX/07cl/9O3
        Jf/TtyX/07cl/9O3Jf/TtyX/07cl/9O3Jf/TtiTe07clf8+vHw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAz7cmH9G2
        JG/TtiSe0rYlvtK2Jb7StiW+0rYlvtK3JKbStiR31LQkLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAGAAAABwAAAA+AA
        AAfgAAAH8AAAD/gAAB/+AAB//4AA///gB/8=
</value>
  </data>
</root>